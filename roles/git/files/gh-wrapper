#!/usr/bin/node

const execa = require('execa')
const {Octokit} = require('@octokit/rest')
const octokit = new Octokit({ auth: '' })

let localOwner = ''
let repo = ''

const main = async () => {
  const data = /:([^\/]+)\/([^\.]+)\.git$/.exec(
    (await execa.command('git remote get-url origin')).stdout,
  );

  localOwner = data[1]
  repo = data[2]

  switch (process.argv[2]) {
    case 'checkout-pull-request': checkoutPullRequest(process.argv[3]); break;
    case 'list-pull-requests': listPullRequests(); break;
    case 'send-pull-request': sendPullRequest(process.argv[3]); break;
    default: break;
  }
}

const listPullRequests = async () => {
  const {data: prs} = await octokit.pulls.list({ owner: localOwner, repo })

  prs.forEach(pr => {
    console.log(`#${pr.number} ${pr.title} (@${pr.user.login})`)
  })
}

const checkoutPullRequest = async (number) => {
  const {data: prs} = await octokit.pulls.list({ owner: localOwner, repo })
  const pr = prs.find(pr => pr.number == number)

  await execa.command(`git pr ${pr.html_url}`)
  await execa.command(`git branch --move pr/${pr.user.login}/${pr.number}`)
}

const sendPullRequest = async (owner) => {
  const {stdout: title} = await execa.command('git log -1 --pretty=%s')
  const {stdout: branch} = await execa.command('git rev-parse --abbrev-ref HEAD')
  const pattern = /^pr\/([a-zA-Z0-9-]+)\/([0-9]+)$/i
  let sourceOwner = '';
  let sourceNumber = '';
  let body = '';


  if (pattern.test(branch)) {
    const data = pattern.exec(branch)

    sourceOwner = data[1]
    sourceNumber = data[2]
    body = `/cc @${sourceOwner}`
  }

  await execa.command(`git push origin ${branch}`)

  const pr = await octokit.pulls.create({
    owner,
    repo,
    title,
    head: `${localOwner}:${branch}`,
    base: 'master',
    body
  })

  if (sourceOwner && sourceNumber) {
    await octokit.issues.createComment({
      owner: localOwner,
      repo,
      issue_number: sourceNumber,
      body: pr.data.html_url
    })

    await octokit.pulls.update({
      owner: localOwner,
      repo,
      pull_number: sourceNumber,
      state: 'closed'
    })
  }

  if (owner === 'liferay-echo') {
    await octokit.issues.createComment({
      owner,
      repo,
      issue_number: pr.data.number,
      body: 'ci:forward'
    })
  }

  await execa.command('git checkout master')
  await execa.command(`git branch -D ${branch}`)

  console.log(pr.data.html_url)
}

main();
