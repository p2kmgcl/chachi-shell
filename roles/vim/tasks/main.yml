---

- name: Install neovim
  become: yes
  get_url:
    url: https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage
    dest: /usr/bin/nvim
    mode: '0755'
    owner: root

- name: Install python-dev and pip (2 and 3)
  become: yes
  apt:
    name: ['python-dev', 'python-pip', 'python3-dev', 'python3-pip']
    state: present

- name: Add neovim python support
  pip:
    executable: "{{ item }}"
    name: neovim
    state: present
    extra_args: --user
  with_items:
    - pip2
    - pip3

- name: Install ruby
  become: yes
  apt:
    name: ['ruby-full']
    state: present

- name: Add neovim ruby support
  become: yes
  gem:
    name: neovim
    state: present
    user_install: no
  with_items:
    - neovim

- name: Create .config/nvim/
  file:
    path: "{{ ansible_env.HOME }}/.config/nvim"
    state: directory

- name: Create .local/share/nvim/site/autoload/
  file:
    path: "{{ ansible_env.HOME }}/.local/share/nvim/site/autoload"
    state: directory

- name: Create .config/nvim/plugged/
  file:
    path: "{{ ansible_env.HOME }}/.config/nvim/plugged"
    state: directory

- name: Download vim-plug
  get_url:
    url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    dest: "{{ ansible_env.HOME }}/.local/share/nvim/site/autoload/plug.vim"

- name: Copy init.vim
  copy:
    src: init.vim
    dest: "{{ ansible_env.HOME }}/.config/nvim/init.vim"
  register: copy_init_vim

- name: Copy coc-settings.json
  copy:
    src: coc-settings.json
    dest: "{{ ansible_env.HOME }}/.config/nvim/coc-settings.json"

- name: Update vim plugins
  shell: nvim --headless -c "PlugClean!" +PlugUpdate +UpdateRemotePlugins -c "CocInstall -sync coc-tsserver coc-html coc-json coc-css | q" +qa
  when: copy_init_vim.changed
