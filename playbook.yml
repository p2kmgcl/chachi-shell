---
- hosts: localhost
  vars:
    user: p2kmgcl
    home: /home/p2kmgcl
    chachi: /home/p2kmgcl/.chachi-shell/files
  tasks:
    - name: create directories
      file:
        path: "{{ home }}/{{ item }}"
        state: directory
      with_items:
        - .npm-global
        - .local/share/nvim/site/autoload
        - Projects

    - name: touch files
      file:
        path: "{{ home }}/{{ item }}"
        state: touch
      with_items:
        - .npmrc

    - name: link directories
      file:
        src: "{{ chachi }}/{{ item.src }}"
        path: "{{ home }}/{{ item.path }}"
        state: link
      with_items:
        - src: bin
          path: bin
        - src: nvim
          path: .config/nvim
        - src: liferay
          path: Projects/community-portal

    - name: link config files
      file:
        src: "{{ chachi }}/config/{{ item }}"
        path: "{{ home }}/{{ item }}"
        state: link
      with_items:
        - .editorconfig
        - .gh-wrapper.json
        - .gitconfig
        - .gitignore-global
        - .zshrc

    - name: add lines to files
      lineinfile:
        path: "{{ home }}/{{ item.file }}"
        line: "{{ item.line }}"
        state: present
      with_items:
        - file: .npmrc
          line: "prefix={{ home }}/.npm-global"

    - name: download files
      get_url:
        force: no
        url: "{{ item.url }}"
        dest: "{{ home }}/{{ item.file }}"
        mode: "{{ item.mode|default('0660') }}"
        timeout: 30
      with_items:
        - file: bin/nvim
          url: https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage
          mode: "0770"

    - name: pacman
      become: yes
      pacman:
        name:
          - ant
          - curl
          - docker
          - git
          - jdk8-openjdk
          - jre8-openjdk
          - nodejs
          - npm
          - openjdk8-doc
          - openjdk8-src
          - python
          - python-pip
          - python2
          - python2-pip
          - ripgrep
          - ruby
          - tree
          - xclip
          - zsh
        state: present

    - name: pip
      pip:
        executable: "{{ item }}"
        name:
          - neovim
        state: present
        extra_args: --user
      with_items:
        - pip2
        - pip3

    - name: gem
      become: yes
      gem:
        name: "{{ item }}"
        state: present
        user_install: no
      with_items:
        - neovim

    - name: npm
      npm:
        name: "{{ item }}"
        global: yes
        state: present
      with_items:
        - browser-sync
        - eslint
        - gradle-launcher
        - http-server
        - javascript-typescript-langserver
        - neovim
        - prettier
        - typescript

    - name: clone repositories
      git:
        force: no
        update: no
        repo: "{{ item.repo }}"
        dest: "{{ home }}/{{ item.dir }}"
      with_items:
        - repo: https://github.com/ohmyzsh/ohmyzsh
          dir: .oh-my-zsh
        - repo: https://github.com/zsh-users/zsh-autosuggestions
          dir: .oh-my-zsh/custom/plugins/zsh-autosuggestions
        - repo: https://github.com/chrissicool/zsh-256color
          dir: .oh-my-zsh/custom/plugins/zsh-256color
        - repo: https://github.com/junegunn/fzf.git
          dir: .fzf
        - repo: git@github.com:p2kmgcl/liferay-portal.git
          dir: Projects/community-portal/liferay-portal
        - repo: https://github.com/liferay/liferay-binaries-cache-2017.git
          dir: Projects/community-portal/liferay-binaries-cache-2017
        - repo: https://github.com/liferay/liferay-binaries-cache-2020.git
          dir: Projects/community-portal/liferay-binaries-cache-2020
        - repo: https://github.com/holatuwol/liferay-intellij
          dir: Projects/community-portal/liferay-intellij

    - name: run scripts
      shell: "{{ item.script }}"
      args:
        chdir: "{{ home }}/{{ item.dir }}"
      with_items:
        - script: './nvim --headless -c "PlugClean!" +PlugUpdate +UpdateRemotePlugins -c "CocInstall -sync coc-tsserver coc-html coc-json coc-css | q" +qa'
          dir: "bin"
        - script: "./install --all"
          dir: ".fzf"

    - name: run root scripts
      become: yes
      shell: "{{ item.script }}"
      args:
        chdir: "{{ item.dir|default(home) }}"
      with_items:
        - script: "chsh --shell /bin/zsh {{ user }}"

    - name: Enable system services
      become: yes
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items:
        - docker

    - name: Add user to system groups
      become: yes
      user:
        user: "{{ user }}"
        append: yes
        groups: "{{ item }}"
      with_items:
        - docker
